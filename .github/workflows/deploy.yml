name: Deploy to ECR

on:
  push:
    branches:
      - main  # Trigger the workflow on pushes to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Specify the runner environment

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2  # Check out the repository code

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}  # Use AWS access key from GitHub Secrets
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}  # Use AWS secret key from GitHub Secrets
          aws-region: ap-south-1  # Specify the AWS region (change as needed)

      - name: Login to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: false  # Set to false to not mask the Docker password (can be set to true for security)
          registry-type: private  # Specify the registry type as private
          skip-logout: false  # Set to false to ensure logout after the action completes

      - name: Build and push Docker image
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}  # Get the ECR registry URL from the login step
          ECR_REPOSITORY: my-repository  # Replace with your ECR repository name
          IMAGE_TAG: ${{ github.sha }}  # Use the commit SHA as the image tag
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f new/Dockerfile .  # Specify the Dockerfile path
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG  # Push the Docker image to ECR
